/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.lucassouza.genius;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Lucas Souza [sorackb@gmail.com]
 */
public class FrmGenius extends javax.swing.JFrame {

  private final List<Integer> ordemJogador = new ArrayList<>();
  private final List<Integer> ordemMaquina = new ArrayList<>();
  private Boolean bloqueado = false;

  private class Animacao extends Thread {

    @Override
    public void run() {
      // Bloqueia o acesso ao usuário
      setBloqueado(true);
      try {
        Thread.sleep(500);

        for (Integer ordemBotao : getOrdemMaquina()) {
          // Limpa as cores para dar um efeito de piscar
          limparCores();
          Thread.sleep(500);
          mudarCor(ordemBotao);
          Thread.sleep(500);
        }
      } catch (InterruptedException ex) {
        Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
      }

      limparCores();
      // Desbloqueia para ação do usuário
      setBloqueado(false);
    }
  }

  public FrmGenius() {
    initComponents();
    this.limparCores();
  }

  private void iniciar() {
    this.getOrdemMaquina().clear();
    this.adicionar();
  }

  private void selecionar(Integer ordemBotao) {
    // Para impedir que o usuário aperte os botões quando a máquina estiver mostrando a nova sequência
    if (!bloqueado) {
      this.ordemJogador.add(ordemBotao);
      this.mudarCor(ordemBotao);
      // Avisa o método qual a posição que deve verificar
      this.comparar(this.ordemJogador.size() - 1);
    }
  }

  private void comparar(Integer posicao) {
    // Quer dizer que ele errou
    if (this.ordemJogador.get(posicao) != this.getOrdemMaquina().get(posicao)) {
      JOptionPane.showMessageDialog(this, "Você errou na " + String.valueOf(
              this.ordemJogador.size() + 1) + "ª posição!\nIniciando novamente",
              "Erro!", JOptionPane.WARNING_MESSAGE);
      this.iniciar();
    } else if (this.ordemJogador.size() == this.getOrdemMaquina().size()) {
      this.adicionar();
    }
  }

  private void adicionar() {
    Random randomico = new Random();
    Animacao animacao = new Animacao();

    // Cria um valor de 0 até 3 randomico
    this.getOrdemMaquina().add(randomico.nextInt(4));

    // Inicia a animação
    animacao.start();
    // Zera porque o jogador deve clicar desde o começo novamente
    this.ordemJogador.clear();
  }

  // Public porque é usado na Thread que faz a animação
  public void mudarCor(Integer ordemBotao) {
    this.limparCores();

    switch (ordemBotao) {
      case 0:
        this.btnVermelho.setBackground(Color.RED);
        break;
      case 1:
        this.btnAzul.setBackground(Color.BLUE);
        break;
      case 2:
        this.btnVerde.setBackground(Color.GREEN);
        break;
      default:
        this.btnAmarelo.setBackground(Color.YELLOW);
    }
  }

  // Public porque é usado na Thread que faz a animação
  public void limparCores() {
    Color cor = Color.LIGHT_GRAY;

    this.btnVermelho.setBackground(cor);
    this.btnAzul.setBackground(cor);
    this.btnVerde.setBackground(cor);
    this.btnAmarelo.setBackground(cor);
  }

  public List<Integer> getOrdemMaquina() {
    return ordemMaquina;
  }

  public Boolean getBloqueado() {
    return bloqueado;
  }

  public void setBloqueado(Boolean bloqueado) {
    this.bloqueado = bloqueado;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    btnVermelho = new javax.swing.JButton();
    btnVerde = new javax.swing.JButton();
    btnAmarelo = new javax.swing.JButton();
    btnAzul = new javax.swing.JButton();
    btnIniciar = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    getContentPane().setLayout(new java.awt.GridBagLayout());

    btnVermelho.setText("1");
    btnVermelho.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnVermelhoActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 131;
    gridBagConstraints.ipady = 127;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(btnVermelho, gridBagConstraints);

    btnVerde.setText("3");
    btnVerde.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnVerdeActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 131;
    gridBagConstraints.ipady = 121;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    getContentPane().add(btnVerde, gridBagConstraints);

    btnAmarelo.setText("4");
    btnAmarelo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnAmareloActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 131;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 0.5;
    getContentPane().add(btnAmarelo, gridBagConstraints);

    btnAzul.setText("2");
    btnAzul.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnAzulActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    getContentPane().add(btnAzul, gridBagConstraints);

    btnIniciar.setText("Iniciar");
    btnIniciar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnIniciarActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    getContentPane().add(btnIniciar, gridBagConstraints);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnAmareloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmareloActionPerformed
    this.selecionar(3);
  }//GEN-LAST:event_btnAmareloActionPerformed

  private void btnVermelhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVermelhoActionPerformed
    this.selecionar(0);
  }//GEN-LAST:event_btnVermelhoActionPerformed

  private void btnAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAzulActionPerformed
    this.selecionar(1);
  }//GEN-LAST:event_btnAzulActionPerformed

  private void btnVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerdeActionPerformed
    this.selecionar(2);
  }//GEN-LAST:event_btnVerdeActionPerformed

  private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
    this.iniciar();
  }//GEN-LAST:event_btnIniciarActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(FrmGenius.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(FrmGenius.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(FrmGenius.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(FrmGenius.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        FrmGenius formulario = new FrmGenius();

        // Centraliza o formulário
        formulario.setLocationRelativeTo(null);
        formulario.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnAmarelo;
  private javax.swing.JButton btnAzul;
  private javax.swing.JButton btnIniciar;
  private javax.swing.JButton btnVerde;
  private javax.swing.JButton btnVermelho;
  // End of variables declaration//GEN-END:variables
}
